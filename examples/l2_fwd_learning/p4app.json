{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 9, false],
        ["tmp_0", 16, false],
        ["tmp_1", 48, false],
        ["tmp_2", 9, false],
        ["tmp_3", 32, false],
        ["tmp_4", 48, false],
        ["tmp_5", 16, false],
        ["tmp_6", 32, false],
        ["metadata.ingress_port", 9, false],
        ["_padding_0", 5, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false]
      ]
    },
    {
      "name" : "punt_t",
      "id" : 3,
      "fields" : [
        ["ingress_port", 16, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "punt_data",
      "id" : 3,
      "header_type" : "punt_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [
    {
      "id" : 1,
      "name" : "field_list0",
      "elements" : [
        {
          "type" : "field",
          "value" : ["scalars", "metadata.ingress_port"]
        }
      ]
    }
  ],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp"]
                },
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "ingress_port"]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "op" : "log_msg",
                  "parameters" : [
                    {
                      "type" : "string",
                      "value" : "Parser is accepting frame received on ingress port ID {}"
                    },
                    {
                      "type" : "parameters_vector",
                      "value" : [
                        {
                          "type" : "field",
                          "value" : ["scalars", "tmp"]
                        }
                      ]
                    }
                  ],
                  "source_info" : {
                    "filename" : "/examples/l2_fwd_learning/p4app.p4",
                    "line" : 131,
                    "column" : 8,
                    "source_fragment" : "        log_msg(\\\"Parser is accepting frame received on ingress port ID {}\\\", {standard_metadata.ingress_port});"
                  }
                }
              ],
              "op" : "primitive"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "/examples/l2_fwd_learning/p4app.p4",
        "line" : 426,
        "column" : 8,
        "source_fragment" : "EgressDeparser"
      },
      "order" : ["ethernet", "punt_data"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [
    {
      "name" : "ingressFrames",
      "id" : 0,
      "source_info" : {
        "filename" : "/examples/l2_fwd_learning/p4app.p4",
        "line" : 96,
        "column" : 34,
        "source_fragment" : "ingressFrames"
      },
      "size" : 256,
      "is_direct" : false
    },
    {
      "name" : "egressFrames",
      "id" : 1,
      "source_info" : {
        "filename" : "/examples/l2_fwd_learning/p4app.p4",
        "line" : 99,
        "column" : 34,
        "source_fragment" : "egressFrames"
      },
      "size" : 256,
      "is_direct" : false
    }
  ],
  "register_arrays" : [],
  "calculations" : [],
  "learn_lists" : [
    {
      "id" : 1,
      "name" : "digest_t",
      "elements" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_1"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_2"]
        }
      ]
    }
  ],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "IngressProcess.drop",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 171,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "IngressProcess.forward",
      "id" : 3,
      "runtime_data" : [
        {
          "name" : "egress_port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 189,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = egress_port"
          }
        }
      ]
    },
    {
      "name" : "IngressProcess.broadcast",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "mcast_grp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "ingress_port"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 207,
            "column" : 8,
            "source_fragment" : "standard_metadata.mcast_grp = (bit<16>)standard_metadata.ingress_port + 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "ingress_port"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 208,
            "column" : 45,
            "source_fragment" : "        log_msg(\\\"Muticast group set to {}\\\", {standard_metadata.mcast_grp});"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Muticast group set to {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_0"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 208,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Muticast group set to {}\\\", {standard_metadata.mcast_grp});"
          }
        }
      ]
    },
    {
      "name" : "IngressProcess.learn_via_digest",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 225,
            "column" : 29,
            "source_fragment" : "hdr.ethernet.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 225,
            "column" : 51,
            "source_fragment" : "standard_metadata.ingress_port"
          }
        },
        {
          "op" : "generate_digest",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 225,
            "column" : 8,
            "source_fragment" : "digest<digest_t>(0, {hdr.ethernet.srcAddr, standard_metadata.ingress_port})"
          }
        }
      ]
    },
    {
      "name" : "IngressProcess.learn_via_clone",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.ingress_port"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 243,
            "column" : 8,
            "source_fragment" : "meta.ingress_port = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "clone_ingress_pkt_to_egress",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x00000064"
            },
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 244,
            "column" : 8,
            "source_fragment" : "clone_preserving_field_list(CloneType.I2E, (bit<32>)CPU_PORT_ID, 0)"
          }
        }
      ]
    },
    {
      "name" : "p4app348",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 348,
            "column" : 12,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        },
        {
          "op" : "exit",
          "parameters" : [],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 349,
            "column" : 12,
            "source_fragment" : "exit"
          }
        }
      ]
    },
    {
      "name" : "p4app341",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 341,
            "column" : 28,
            "source_fragment" : "(bit<32>)standard_metadata.ingress_port"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "ingressFrames"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 341,
            "column" : 8,
            "source_fragment" : "ingressFrames.count((bit<32>)standard_metadata.ingress_port)"
          }
        }
      ]
    },
    {
      "name" : "p4app405",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "punt_data"
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 405,
            "column" : 12,
            "source_fragment" : "hdr.punt_data.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["punt_data", "ingress_port"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata.ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 406,
            "column" : 12,
            "source_fragment" : "hdr.punt_data.ingress_port = (bit<16>)meta.ingress_port"
          }
        },
        {
          "op" : "truncate",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x0000000e"
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 407,
            "column" : 12,
            "source_fragment" : "truncate((bit<32>)14)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 408,
            "column" : 83,
            "source_fragment" : "            log_msg(\\\"Going to punt frame with source MAC {} and ingress port {}\\\", {hdr.ethernet.srcAddr, hdr.punt_data.ingress_port});"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata.ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 408,
            "column" : 105,
            "source_fragment" : "            log_msg(\\\"Going to punt frame with source MAC {} and ingress port {}\\\", {hdr.ethernet.srcAddr, hdr.punt_data.ingress_port});"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Going to punt frame with source MAC {} and ingress port {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_4"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_5"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 408,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"Going to punt frame with source MAC {} and ingress port {}\\\", {hdr.ethernet.srcAddr, hdr.punt_data.ingress_port});"
          }
        }
      ]
    },
    {
      "name" : "p4app412",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 412,
            "column" : 16,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "p4app414",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 414,
            "column" : 35,
            "source_fragment" : "(bit<32>)standard_metadata.egress_port"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "egressFrames"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            }
          ],
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 414,
            "column" : 16,
            "source_fragment" : "egressFrames.count((bit<32>)standard_metadata.egress_port)"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "/examples/l2_fwd_learning/p4app.p4",
        "line" : 161,
        "column" : 8,
        "source_fragment" : "IngressProcess"
      },
      "init_table" : "tbl_p4app341",
      "tables" : [
        {
          "name" : "tbl_p4app341",
          "id" : 0,
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 341,
            "column" : 8,
            "source_fragment" : "ingressFrames.count((bit<32>)standard_metadata.ingress_port)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8],
          "actions" : ["p4app341"],
          "base_default_next" : "node_3",
          "next_tables" : {
            "p4app341" : "node_3"
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_p4app348",
          "id" : 1,
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 348,
            "column" : 12,
            "source_fragment" : "mark_to_drop(standard_metadata); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7],
          "actions" : ["p4app348"],
          "base_default_next" : "IngressProcess.bad_macs",
          "next_tables" : {
            "p4app348" : "IngressProcess.bad_macs"
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressProcess.bad_macs",
          "id" : 2,
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 251,
            "column" : 10,
            "source_fragment" : "bad_macs"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ethernet.srcAddr",
              "target" : ["ethernet", "srcAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [2, 0],
          "actions" : ["IngressProcess.drop", "NoAction"],
          "base_default_next" : "IngressProcess.src_macs",
          "next_tables" : {
            "IngressProcess.drop" : "IngressProcess.src_macs",
            "NoAction" : "IngressProcess.src_macs"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          },
          "entries" : [
            {
              "source_info" : {
                "filename" : "/examples/l2_fwd_learning/p4app.p4",
                "line" : 270,
                "column" : 12,
                "source_fragment" : "(0xFFFFFFFFFFFF): drop()"
              },
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0xffffffffffff"
                }
              ],
              "action_entry" : {
                "action_id" : 2,
                "action_data" : []
              },
              "priority" : 1
            }
          ]
        },
        {
          "name" : "IngressProcess.src_macs",
          "id" : 3,
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 275,
            "column" : 10,
            "source_fragment" : "src_macs"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.ethernet.srcAddr",
              "target" : ["ethernet", "srcAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 4096,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5, 6, 1],
          "actions" : ["IngressProcess.learn_via_digest", "IngressProcess.learn_via_clone", "NoAction"],
          "base_default_next" : "IngressProcess.dst_macs",
          "next_tables" : {
            "IngressProcess.learn_via_digest" : "IngressProcess.dst_macs",
            "IngressProcess.learn_via_clone" : "IngressProcess.dst_macs",
            "NoAction" : "IngressProcess.dst_macs"
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "IngressProcess.dst_macs",
          "id" : 4,
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 320,
            "column" : 10,
            "source_fragment" : "dst_macs"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ethernet.dstAddr",
              "target" : ["ethernet", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 4096,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [3, 4],
          "actions" : ["IngressProcess.forward", "IngressProcess.broadcast"],
          "base_default_next" : null,
          "next_tables" : {
            "IngressProcess.forward" : null,
            "IngressProcess.broadcast" : null
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_3",
          "id" : 0,
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 347,
            "column" : 12,
            "source_fragment" : "standard_metadata.ingress_port == CPU_PORT_ID"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "ingress_port"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0064"
              }
            }
          },
          "true_next" : "tbl_p4app348",
          "false_next" : "IngressProcess.bad_macs"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "/examples/l2_fwd_learning/p4app.p4",
        "line" : 387,
        "column" : 8,
        "source_fragment" : "EgressProcess"
      },
      "init_table" : "node_10",
      "tables" : [
        {
          "name" : "tbl_p4app405",
          "id" : 5,
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 405,
            "column" : 12,
            "source_fragment" : "hdr.punt_data.setValid(); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9],
          "actions" : ["p4app405"],
          "base_default_next" : null,
          "next_tables" : {
            "p4app405" : null
          },
          "default_entry" : {
            "action_id" : 9,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_p4app412",
          "id" : 6,
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 412,
            "column" : 16,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10],
          "actions" : ["p4app412"],
          "base_default_next" : null,
          "next_tables" : {
            "p4app412" : null
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_p4app414",
          "id" : 7,
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 414,
            "column" : 16,
            "source_fragment" : "egressFrames.count((bit<32>)standard_metadata.egress_port)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11],
          "actions" : ["p4app414"],
          "base_default_next" : null,
          "next_tables" : {
            "p4app414" : null
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_10",
          "id" : 1,
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 393,
            "column" : 12,
            "source_fragment" : "standard_metadata.instance_type == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "instance_type"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000001"
              }
            }
          },
          "true_next" : "tbl_p4app405",
          "false_next" : "node_12"
        },
        {
          "name" : "node_12",
          "id" : 2,
          "source_info" : {
            "filename" : "/examples/l2_fwd_learning/p4app.p4",
            "line" : 411,
            "column" : 16,
            "source_fragment" : "standard_metadata.egress_port == standard_metadata.ingress_port"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "egress_port"]
              },
              "right" : {
                "type" : "field",
                "value" : ["standard_metadata", "ingress_port"]
              }
            }
          },
          "true_next" : "tbl_p4app412",
          "false_next" : "tbl_p4app414"
        }
      ]
    }
  ],
  "checksums" : [],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "/examples/l2_fwd_learning/p4app.p4i",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}